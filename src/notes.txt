'''
A 'mapping' describes the output JSON as a tree of nodes,
a node can have the following attributes:

type
name
name_col
value
value_col
children
filter
split_by
group
func

type must be either 'object', 'array', or 'leaf'

an object is parent to nodes with names
an array is parent to nodes without names
a leaf can not be parent to further nodes

children is a list of all child nodes

each child to an object must have a name
use name_col to fetch name dynamically from a column
use name to set a hard coded name

each leaf has a value (string, float, int, true, false, or none)
use value_col to fetch value dynamically from a column
use value to set a hard coded value

filter is used to reduce the scope of the dataframe

split_by is used to split the scope into smaller chunks
split_by can be either 'row' or 'group'
if split_by is 'row' then each row will generate a JSON node
if split_by is 'group' then each group of the scope will generate one JSON node
if split_by is 'group' then there has to be a group attribute
group should be the column name (string) to group by

if split_by is not present then the current scope will generate one JSON node

func is used to apply a function to a JSON node after it has been created
'''